#
# Generated by Chef
#
# elasticsearch - ElasticSearch Server
#
description     "ElasticSearch Server"

start on filesystem or runlevel [2345]
stop on runlevel [!2345]

# Increase default timeout before killing (on stop) to 10 seconds
kill timeout 50

setuid <%= node['elasticsearch']['user'] %>
setgid <%= node['elasticsearch']['group'] %>
respawn limit 15 5
kill signal HUP

pre-start script
  test -d <%= node['elasticsearch']['base_dir'] %> || { stop; exit 0; }
end script

<%
@args = []
@args << "-server"
@args << "-Djava.net.preferIPv4Stack=true"
@args << "-XX:+UseParNewGC"
@args << "-XX:+UseConcMarkSweepGC"
@args << "-XX:CMSInitiatingOccupancyFraction=75"
@args << "-XX:+UseCMSInitiatingOccupancyOnly"
@args << "-XX:+HeapDumpOnOutOfMemoryError"
@args << "-Des.config=#{node['elasticsearch']['base_dir']}/config/elasticsearch.yml"
@args << "-Xms#{node['elasticsearch']['min_mem']}"
@args << "-Xmx#{node['elasticsearch']['max_mem']}"
@args << "-Xss#{node['elasticsearch']['thread_stack_size']}"
@args << "-Des.path.home=#{node['elasticsearch']['base_dir']}"
@args << "-cp"
base_jars = Dir.glob("#{node['elasticsearch']['base_dir']}/lib/*.jar")
sigar_jars = Dir.glob("#{node['elasticsearch']['base_dir']}/lib/sigar/*.jar")
@args << (base_jars + sigar_jars + @extra_libraries).sort.join(':')
@args << "org.elasticsearch.bootstrap.ElasticSearch"
%>

chdir <%= node['elasticsearch']['base_dir'] %>
exec <%= @authbind ? "/usr/bin/authbind --deep " : "" %><%= node["java"]["java_home"] %>/bin/java <%= @args.join(' ') %>

# Uglies to wait until the broker is actually up before completion of the 'start'
post-start script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '<%= node['elasticsearch']['server']['interface'] %>:<%= listen_port %> ') -eq 0 ]
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 60; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script

# Uglies to wait until the broker is actually up before completion of the 'stop'
post-stop script
  <% @listen_ports.sort.each do |listen_port| %>
  while [ $(netstat -nl | grep -c '<%= node['elasticsearch']['server']['interface'] %>:<%= listen_port %> ') -ne 0 ]
  do
      i=$(( $i + 1 ))
      echo -n "."
      if test $i -gt 60; then
          echo "Error"
          stop; exit 42
      fi
      sleep 1
  done
  <% end %>
end script
